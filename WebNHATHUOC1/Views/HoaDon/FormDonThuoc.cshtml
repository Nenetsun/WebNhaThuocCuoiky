@model WebNHATHUOC1.Models.HOADON

@{
    ViewBag.Title = "FormDonThuoc";
    Layout = "~/Views/_LayoutPage1.cshtml";
}

<h2>FORM LẬP ĐƠN THUỐC</h2>
<style>
    #tblCTHD th {
        cursor: pointer;
    }
</style>

@using (Html.BeginForm("addHoaDon", "HoaDon", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Hóa đơn</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.sohd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 input-group">
                @{
                    if (Session["Mahd"] == null || Session["Mahd"] as string == "")
                    {
                        @Html.EditorFor(model => model.sohd, new { htmlAttributes = new { @class = "form-control col-md-4" } });
                    }
                    else
                    {
                        <span class="input-group-text">Mã hóa đơn: @Session["Mahd"]</span>
                    }
                }
                <div class="input-group-append">
                    <input type="submit" value="Hoàn tất" class="btn btn-primary" />
                </div>
                @Html.ValidationMessageFor(model => model.sohd, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (Session["Sodt"] != null)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.makh, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 input-group">
                    @{
                        WebNHATHUOC1.Models.KHACHHANG kh = ViewBag.KH as WebNHATHUOC1.Models.KHACHHANG;
                    }
                    <span class="input-group-text">Số điện thoại: @kh.sodt</span>
                    <span class="input-group-text">Tên khách hàng: @kh.tenkh</span>
                </div>
            </div>
        }
    </div>
}

<div class="input-group mb-3">
    <input id="nameKH" name="nameKH" type="text" class="form-control col-md-6" placeholder="Tìm kiếm khách hàng">
    <div class="input-group-append">
        <button id="btnSearch1" class="btn btn-success" type="button">Search</button>
    </div>
    <div class="input-group-append">
        @Html.ActionLink("Thêm khách hàng", "FormThemKH", "KhachHang", null, new { @class = "btn btn-success" })
    </div>
</div>

<div class="input-group mb-3">
    <input id="nameThuoc" name="nameThuoc" type="text" class="form-control col-md-6" placeholder="Tìm kiếm thuốc">
    <div class="input-group-append">
        <button id="btnSearch2" class="btn btn-success" type="button">Search</button>
    </div>
</div>

<div id="tblThuoc">

</div>

@if (ViewBag.DSCTHD != null)
{
    <h3>Chi tiết hóa đơn</h3>

    <table class="table table-bordered table-striped" id="tblCTHD">
        <tr>
            <th onclick="sortTable(0)">@Html.DisplayName("Số hóa đơn")</th>
            <th onclick="sortTable(1)">@Html.DisplayName("Mã thuốc")</th>
            <th onclick="sortTable(2)">@Html.DisplayName("Đơn vị tính")</th>
            <th onclick="sortTable(3)">@Html.DisplayName("Đơn giá")</th>
            <th onclick="sortTabl(4)">@Html.DisplayName("Số lượng")</th>
            <th onclick="sortTable(5)">@Html.DisplayName("Thành tiền")</th>
        </tr>
        @{
            int index = -1;
            double tongtien = 0;
        }
        @foreach (var item in ViewBag.DSCTHD as List<WebNHATHUOC1.Models.CHITIETHOADON>)
        {
            index++;
            string btn = "btn" + index.ToString();
            string value = index.ToString();
            <tr>
                <td>@item.sohd</td>
                <td>@item.mathuoc</td>
                <td>@item.donvitinh</td>
                <td>@item.dongia</td>
                <td>
                    <input type="number" value="@item.soluong" id="@btn" />
                </td>
                <td>@item.thanhtien</td>
                <td>
                    <button type="submit" class="btn btn-success" value="Cập nhật" id="@value" onclick="update(this.id);">Cập nhật</button>
                </td>
                <td>
                    @Html.ActionLink("Xóa", "delCTHD", new { item.mathuoc }, new { @class = "btn btn-success" })
                </td>
            </tr>
            tongtien += (double)item.thanhtien;
        }
    </table>
    <span class="input-group-text" style="text-align:right">Tổng tiền: @tongtien</span>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<link type="text/css" href="https://cdn.datatables.net/1.10.24/css/jquery.dataTables.min.css" rel="stylesheet" />

<script type="text/javascript" src="~/Scripts/jquery-3.4.1.min.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.validate.min.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/1.10.24/js/jquery.dataTables.min.js"></script>
<script>
    $(document).ready(function () {
        $("#btnSearch1").click(function () {
            var name1 = $('#nameKH').val();
            var sohd1 = $('#sohd').val();
            var url1 = '/HoaDon/searchKH/?name=' + name1 + '&sohd=' + sohd1;
            $.get(url1, function (data) { $('#tblThuoc').html(data); });
        });

        $("#btnSearch2").click(function () {
            var name2 = $('#nameThuoc').val();
            var sohd2 = $('#sohd').val();
            var url2 = '/HoaDon/chonThuoc/?name=' + name2 + '&sohd=' + sohd2;
            $.get(url2, function (data) { $('#tblThuoc').html(data); });
        });
    });
</script>
<script>
    function update(index) {
        select1 = "#btn" + index;
        soluong = $(select1).val();
        url3 = '/HoaDon/updateCTHD/?index=' + index + '&soluong=' + soluong;
        $.get(url3);
        location.reload();
    }
</script>
<script>
    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("tblCTHD");
        switching = true;
        // Set the sorting direction to ascending:
        dir = "asc";
        /* Make a loop that will continue until
        no switching has been done: */
        while (switching) {
            // Start by saying: no switching is done:
            switching = false;
            rows = table.rows;
            /* Loop through all table rows (except the
            first, which contains table headers): */
            for (i = 1; i < (rows.length - 1); i++) {
                // Start by saying there should be no switching:
                shouldSwitch = false;
                /* Get the two elements you want to compare,
                one from current row and one from the next: */
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                /* Check if the two rows should switch place,
                based on the direction, asc or desc: */
                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        // If so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        // If so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                /* If a switch has been marked, make the switch
                and mark that a switch has been done: */
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                // Each time a switch is done, increase this count by 1:
                switchcount++;
            } else {
                /* If no switching has been done AND the direction is "asc",
                set the direction to "desc" and run the while loop again. */
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }
</script>